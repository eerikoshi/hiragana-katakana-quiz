"use client";
import React, { useState, useEffect } from "react";
import { Card, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";

const hiraganaData = {
  A: "„ÅÇ", I: "„ÅÑ", U: "„ÅÜ", E: "„Åà", O: "„Åä",
  Ka: "„Åã", Ki: "„Åç", Ku: "„Åè", Ke: "„Åë", Ko: "„Åì",
  Sa: "„Åï", Shi: "„Åó", Su: "„Åô", Se: "„Åõ", So: "„Åù",
  Ta: "„Åü", Chi: "„Å°", Tsu: "„Å§", Te: "„Å¶", To: "„Å®",
  Na: "„Å™", Ni: "„Å´", Nu: "„Å¨", Ne: "„Å≠", No: "„ÅÆ",
  Ha: "„ÅØ", Hi: "„Å≤", Fu: "„Åµ", He: "„Å∏", Ho: "„Åª",
  Ma: "„Åæ", Mi: "„Åø", Mu: "„ÇÄ", Me: "„ÇÅ", Mo: "„ÇÇ",
  Ya: "„ÇÑ", Yu: "„ÇÜ", Yo: "„Çà",
  Ra: "„Çâ", Ri: "„Çä", Ru: "„Çã", Re: "„Çå", Ro: "„Çç",
  Wa: "„Çè", Wo: "„Çí", N: "„Çì",
  Kya: "„Åç„ÇÉ", Kyu: "„Åç„ÇÖ", Kyo: "„Åç„Çá",
  Sha: "„Åó„ÇÉ", Shu: "„Åó„ÇÖ", Sho: "„Åó„Çá",
  Cha: "„Å°„ÇÉ", Chu: "„Å°„ÇÖ", Cho: "„Å°„Çá",
  Pya: "„Å¥„ÇÉ", Pyu: "„Å¥„ÇÖ", Pyo: "„Å¥„Çá",
  Gya: "„Åé„ÇÉ", Gyu: "„Åé„ÇÖ", Gyo: "„Åé„Çá",
  Bya: "„Å≥„ÇÉ", Byu: "„Å≥„ÇÖ", Byo: "„Å≥„Çá"
};

const katakanaData = {
  A: "„Ç¢", I: "„Ç§", U: "„Ç¶", E: "„Ç®", O: "„Ç™",
  Ka: "„Ç´", Ki: "„Ç≠", Ku: "„ÇØ", Ke: "„Ç±", Ko: "„Ç≥",
  Sa: "„Çµ", Shi: "„Ç∑", Su: "„Çπ", Se: "„Çª", So: "„ÇΩ",
  Ta: "„Çø", Chi: "„ÉÅ", Tsu: "„ÉÑ", Te: "„ÉÜ", To: "„Éà",
  Na: "„Éä", Ni: "„Éã", Nu: "„Éå", Ne: "„Éç", No: "„Éé",
  Ha: "„Éè", Hi: "„Éí", Fu: "„Éï", He: "„Éò", Ho: "„Éõ",
  Ma: "„Éû", Mi: "„Éü", Mu: "„É†", Me: "„É°", Mo: "„É¢",
  Ya: "„É§", Yu: "„É¶", Yo: "„É®",
  Ra: "„É©", Ri: "„É™", Ru: "„É´", Re: "„É¨", Ro: "„É≠",
  Wa: "„ÉØ", Wo: "„É≤", N: "„É≥",
  Kya: "„Ç≠„É£", Kyu: "„Ç≠„É•", Kyo: "„Ç≠„Éß",
  Sha: "„Ç∑„É£", Shu: "„Ç∑„É•", Sho: "„Ç∑„Éß",
  Cha: "„ÉÅ„É£", Chu: "„ÉÅ„É•", Cho: "„ÉÅ„Éß",
  Pya: "„Éî„É£", Pyu: "„Éî„É•", Pyo: "„Éî„Éß",
  Gya: "„ÇÆ„É£", Gyu: "„ÇÆ„É•", Gyo: "„ÇÆ„Éß",
  Bya: "„Éì„É£", Byu: "„Éì„É•", Byo: "„Éì„Éß"
};

const kotobaList = [
  { hiragana: "„Å≤„Å®", kanji: "‰∫∫", arti: "Orang" },
  { hiragana: "„ÅÑ„Åà", kanji: "ÂÆ∂", arti: "Rumah" },
  { hiragana: "„Åè„Çã„Åæ", kanji: "Ëªä", arti: "Mobil" },
  { hiragana: "„Åå„Å£„Åì„ÅÜ", kanji: "Â≠¶Ê†°", arti: "Sekolah" },
  { hiragana: "„Åõ„Çì„Åõ„ÅÑ", kanji: "ÂÖàÁîü", arti: "Guru" },
  { hiragana: "„Åå„Åè„Åõ„ÅÑ", kanji: "Â≠¶Áîü", arti: "Murid / Mahasiswa" },
  { hiragana: "„Å®„ÇÇ„Å†„Å°", kanji: "ÂèãÈÅî", arti: "Teman" },
  { hiragana: "„Åª„Çì", kanji: "Êú¨", arti: "Buku" },
  { hiragana: "„Åà„Åç", kanji: "ÈßÖ", arti: "Stasiun" },
  { hiragana: "„Åä„Åã„Å≠", kanji: "„ÅäÈáë", arti: "Uang" },
  { hiragana: "„Åß„Çì„Çè", kanji: "ÈõªË©±", arti: "Telepon" },
  { hiragana: "„ÅÑ„Å¨", kanji: "Áä¨", arti: "Anjing" },
  { hiragana: "„Å≠„Åì", kanji: "Áå´", arti: "Kucing" },
  { hiragana: "„Åî„ÅØ„Çì", kanji: "„ÅîÈ£Ø", arti: "Nasi / Makanan" },
  { hiragana: "„Åø„Åö", kanji: "Ê∞¥", arti: "Air" },
  { hiragana: "„Å´„Åª„Çì", kanji: "Êó•Êú¨", arti: "Jepang" },
  { hiragana: "„Åò„Åã„Çì", kanji: "ÊôÇÈñì", arti: "Waktu" },
  { hiragana: "„Å≤„Çã", kanji: "Êòº", arti: "Siang" },
  { hiragana: "„Çà„Çã", kanji: "Â§ú", arti: "Malam" },
  { hiragana: "„ÅÇ„Åï", kanji: "Êúù", arti: "Pagi" },
];

function shuffle(arr) {
  return [...arr].sort(() => Math.random() - 0.5);
}

export default function GameGabungan() {
  const [gameMode, setGameMode] = useState("kana");
  const [kanaMode, setKanaMode] = useState("hiragana");
  const [kanaQueue, setKanaQueue] = useState([]);
  const [kanaQuestion, setKanaQuestion] = useState("");
  const [kanaOptions, setKanaOptions] = useState([]);
  const [kanaFeedback, setKanaFeedback] = useState("");

  const [kotobaQueue, setKotobaQueue] = useState([]);
  const [kotobaQuestion, setKotobaQuestion] = useState(null);
  const [kotobaOptions, setKotobaOptions] = useState([]);
  const [kotobaFeedback, setKotobaFeedback] = useState("");

  const kanaData = kanaMode === "hiragana" ? hiraganaData : katakanaData;
  const kanaKeys = Object.keys(kanaData);

  useEffect(() => {
    if (gameMode === "kana") {
      const shuffled = shuffle(kanaKeys);
      setKanaQueue(shuffled);
      setKanaFeedback("");
    }
    if (gameMode === "kotoba") {
      const shuffled = shuffle(kotobaList);
      setKotobaQueue(shuffled);
      setKotobaFeedback("");
    }
  }, [kanaMode, gameMode]);

  useEffect(() => {
    if (gameMode === "kana" && kanaQueue.length > 0) {
      const answer = kanaQueue[0];
      const options = shuffle([
        answer,
        ...shuffle(kanaKeys.filter(k => k !== answer)).slice(0, 3),
      ]);
      setKanaQuestion(kanaData[answer]);
      setKanaOptions(options);
    }
  }, [kanaQueue]);

  useEffect(() => {
    if (gameMode === "kotoba" && kotobaQueue.length > 0) {
      const q = kotobaQueue[0];
      const options = shuffle([
        q.arti,
        ...shuffle(kotobaList.filter(k => k.arti !== q.arti)).slice(0, 3).map(k => k.arti),
      ]);
      setKotobaQuestion(q);
      setKotobaOptions(options);
    }
  }, [kotobaQueue]);

  const handleKanaAnswer = (ans) => {
    const correct = kanaQueue[0];
    if (ans === correct) {
      setKanaFeedback("‚úÖ Benar!");
      setKanaQueue(kanaQueue.slice(1));
    } else {
      setKanaFeedback(`‚ùå Salah. Jawaban: ${correct}`);
    }
  };

  const handleKotobaAnswer = (ans) => {
    const correct = kotobaQueue[0].arti;
    if (ans === correct) {
      setKotobaFeedback("‚úÖ Benar!");
      setKotobaQueue(kotobaQueue.slice(1));
    } else {
      setKotobaFeedback(`‚ùå Salah. Jawaban: ${correct}`);
    }
  };

  return (
    <div className="p-4 min-h-screen flex flex-col items-center justify-start">
      <h1 className="text-3xl font-bold mb-4">üéå Belajar Jepang</h1>

      {/* Mode */}
      <div className="mb-4 flex gap-2">
        <Button onClick={() => setGameMode("kana")} variant={gameMode === "kana" ? "default" : "outline"}>
          Tebak Kana
        </Button>
        <Button onClick={() => setGameMode("kotoba")} variant={gameMode === "kotoba" ? "default" : "outline"}>
          Tebak Kotoba
        </Button>
      </div>

      {gameMode === "kana" && (
        <>
          <div className="mb-4 flex gap-2">
            <Button onClick={() => setKanaMode("hiragana")} variant={kanaMode === "hiragana" ? "default" : "outline"}>
              Hiragana
            </Button>
            <Button onClick={() => setKanaMode("katakana")} variant={kanaMode === "katakana" ? "default" : "outline"}>
              Katakana
            </Button>
          </div>

          {kanaQueue.length > 0 ? (
            <>
              <div className="text-6xl my-4">{kanaQuestion}</div>
              <div className="grid grid-cols-2 gap-4 max-w-xs">
                {kanaOptions.map((o, i) => (
                  <Button key={i} onClick={() => handleKanaAnswer(o)}>{o}</Button>
                ))}
              </div>
              {kanaFeedback && <p className="mt-4 text-xl">{kanaFeedback}</p>}
            </>
          ) : (
            <p className="text-green-600 mt-4">üéâ Semua soal selesai!</p>
          )}
        </>
      )}

      {gameMode === "kotoba" && (
        <>
          {kotobaQueue.length > 0 && kotobaQuestion ? (
            <>
              <Card className="w-full max-w-md mb-4">
                <CardContent className="text-center p-6 text-4xl">
                  {kotobaQuestion.hiragana}Ôºà{kotobaQuestion.kanji}Ôºâ
                </CardContent>
              </Card>
              <div className="grid grid-cols-2 gap-4 max-w-md w-full">
                {kotobaOptions.map((o, i) => (
                  <Button key={i} onClick={() => handleKotobaAnswer(o)}>{o}</Button>
                ))}
              </div>
              {kotobaFeedback && <p className="mt-6 text-xl">{kotobaFeedback}</p>}
            </>
          ) : (
            <p className="text-green-600 mt-4">üéâ Semua soal selesai!</p>
          )}
        </>
      )}
    </div>
  );
}
